
#pragma once
#include"msxdef.h"
#include"CZ80Regs.h"
#include <vector>

class CMsxMemSlotSystem;
class CMsxIoSystem;

class CZ80MsxDos
{
private:
	enum INTERRUPTMODE {INTERRUPTMODE0,INTERRUPTMODE1,INTERRUPTMODE2 };
	typedef void (CZ80MsxDos::*POpCodeFunc)();
	struct Z80OPCODETABLE
	{
		POpCodeFunc	Single[256];
		POpCodeFunc	Extended1[256];
		POpCodeFunc	Extended2IX[256];
		POpCodeFunc	Extended2IX2[256];
		POpCodeFunc	Extended4IY[256];
		POpCodeFunc	Extended4IY2[256];
		POpCodeFunc	Extended3[256];
	};
	CZ80Regs			m_R;
	CMsxMemSlotSystem	*m_pMemSys;
	CMsxIoSystem		*m_pIoSys;
	bool				m_bHalt;
	bool				m_bIFF1, m_bIFF2;
	INTERRUPTMODE		m_IM;
	CUTimeCount			m_Tim;
	CUTimeCount			m_Tim16ms;
	Z80OPCODETABLE		m_Op;

#ifndef NDEBUG
	std::vector<CZ80Regs> m_PcHist;
#endif


public:
	CZ80MsxDos();
	virtual ~CZ80MsxDos();

public:
	void ResetCpu();
	void ResetCpu(const z80memaddr_t pc, const z80memaddr_t sp);
	void SetSubSystem(CMsxMemSlotSystem *pMemSlot, CMsxIoSystem *pIoObj);
	void Execution();

	void OpCodeMachine();
	void InterruptMachine();
	void BiosFunctionCall();
	void ExtendedBiosFunctionCall();
	void MainRomFunctionCall();
	void MsxDosFunctionCall();

	void Push16(const uint16_t w);
	uint16_t Pop16();
	z80memaddr_t GetPC() const;
	z80memaddr_t GetSP() const;

public:
	// for debug
	const CZ80Regs &GetCurrentRegs() const;

private:
	void setup();

private:
	std::vector<int> m_MemoryMapper;
	bool patchingMapper(int *pPsegNo, int usersys);

private:
	void op_UNDEFINED();
	// single-byte opecode
	void op_NOP();
	void op_LD_BC_ad();
	void op_LD_memBC_A();
	void op_INC_BC();
	void op_INC_B();
	void op_DEC_B();
	void op_LD_B_v();
	void op_RLCA();
	void op_EX_AF_AF();
	void op_ADD_HL_BC();
	void op_LD_A_memBC();
	void op_DEC_BC();
	void op_INC_C();
	void op_DEC_C();
	void op_LD_C_v();
	void op_RRCA();
	void op_DJNZ_v();
	void op_LD_DE_ad();
	void op_LD_memDE_A();
	void op_INC_DE();
	void op_INC_D();
	void op_DEC_D();
	void op_LD_D_v();
	void op_RLA();
	void op_JR_v();
	void op_ADD_HL_DE();
	void op_LD_A_memDE();
	void op_DEC_DE();
	void op_INC_E();
	void op_DEC_E();
	void op_LD_E_v();
	void op_RRA();
	void op_JR_nz_v();
	void op_LD_HL_ad();
	void op_LD_memAD_HL();
	void op_INC_HL();
	void op_INC_H();
	void op_DEC_H();
	void op_LD_H_v();
	void op_DAA();
	void op_JR_z_v();
	void op_ADD_HL_HL();
	void op_LD_HL_memAD();
	void op_DEC_HL();
	void op_INC_L();
	void op_DEC_L();
	void op_LD_L_v();
	void op_CPL();
	void op_JR_nc_v();
	void op_LD_SP_ad();
	void op_LD_memAD_A();
	void op_INC_SP();
	void op_INC_memHL();
	void op_DEC_memHL();
	void op_LD_memHL_v();
	void op_SCF();
	void op_JR_C_v();
	void op_ADD_HL_SP();
	void op_LD_A_memAD();
	void op_DEC_SP();
	void op_INC_A();
	void op_DEC_A();
	void op_LD_A_v();
	void op_CCF();
	void op_LD_B_B();
	void op_LD_B_C();
	void op_LD_B_D();
	void op_LD_B_E();
	void op_LD_B_H();
	void op_LD_B_L();
	void op_LD_B_memHL();
	void op_LD_B_A();
	void op_LD_C_B();
	void op_LD_C_C();
	void op_LD_C_D();
	void op_LD_C_E();
	void op_LD_C_H();
	void op_LD_C_L();
	void op_LD_C_memHL();
	void op_LD_C_A();
	void op_LD_D_B();
	void op_LD_D_C();
	void op_LD_D_D();
	void op_LD_D_E();
	void op_LD_D_H();
	void op_LD_D_L();
	void op_LD_D_memHL();
	void op_LD_D_A();
	void op_LD_E_B();
	void op_LD_E_C();
	void op_LD_E_D();
	void op_LD_E_E();
	void op_LD_E_H();
	void op_LD_E_L();
	void op_LD_E_memHL();
	void op_LD_E_A();
	void op_LD_H_B();
	void op_LD_H_C();
	void op_LD_H_D();
	void op_LD_H_E();
	void op_LD_H_H();
	void op_LD_H_L();
	void op_LD_H_memHL();
	void op_LD_H_A();
	void op_LD_L_B();
	void op_LD_L_C();
	void op_LD_L_D();
	void op_LD_L_E();
	void op_LD_L_H();
	void op_LD_L_L();
	void op_LD_L_memHL();
	void op_LD_L_A();
	void op_LD_memHL_B();
	void op_LD_memHL_C();
	void op_LD_memHL_D();
	void op_LD_memHL_E();
	void op_LD_memHL_H();
	void op_LD_memHL_L();
	void op_HALT();
	void op_LD_memHL_A();
	void op_LD_A_B();
	void op_LD_A_C();
	void op_LD_A_D();
	void op_LD_A_E();
	void op_LD_A_H();
	void op_LD_A_L();
	void op_LD_A_memHL();
	void op_LD_A_A();
	void op_ADD_A_B();
	void op_ADD_A_C();
	void op_ADD_A_D();
	void op_ADD_A_E();
	void op_ADD_A_H();
	void op_ADD_A_L();
	void op_ADD_A_memHL();
	void op_ADD_A_A();
	void op_ADC_A_B();
	void op_ADC_A_C();
	void op_ADC_A_D();
	void op_ADC_A_E();
	void op_ADC_A_H();
	void op_ADC_A_L();
	void op_ADC_A_memHL();
	void op_ADC_A_A();
	void op_SUB_B();
	void op_SUB_C();
	void op_SUB_D();
	void op_SUB_E();
	void op_SUB_H();
	void op_SUB_L();
	void op_SUB_memHL();
	void op_SUB_A();
	void op_SBC_A_B();
	void op_SBC_A_C();
	void op_SBC_A_D();
	void op_SBC_A_E();
	void op_SBC_A_H();
	void op_SBC_A_L();
	void op_SBC_A_memHL();
	void op_SBC_A();
	void op_AND_B();
	void op_AND_C();
	void op_AND_D();
	void op_AND_E();
	void op_AND_H();
	void op_AND_L();
	void op_AND_memHL();
	void op_AND_A();
	void op_XOR_B();
	void op_XOR_C();
	void op_XOR_D();
	void op_XOR_E();
	void op_XOR_H();
	void op_XOR_L();
	void op_XOR_memHL();
	void op_XOR_A();
	void op_OR_B();
	void op_OR_C();
	void op_OR_D();
	void op_OR_E();
	void op_OR_H();
	void op_OR_L();
	void op_OR_memHL();
	void op_OR_A();
	void op_CP_B();
	void op_CP_C();
	void op_CP_D();
	void op_CP_E();
	void op_CP_H();
	void op_CP_L();
	void op_CP_memHL();
	void op_CP_A();
	void op_RET_nz();
	void op_POP_BC();
	void op_JP_nz_ad();
	void op_JP_ad();
	void op_CALL_nz_ad();
	void op_PUSH_BC();
	void op_ADD_A_v();
	void op_RST_0h();
	void op_RET_z();
	void op_RET();
	void op_JP_z_ad();
	void op_EXTENDED_1();
	void op_CALL_z_ad();
	void op_CALL_ad();
	void op_ADC_A_v();
	void op_RST_8h();
	void op_RET_nc();
	void op_POP_DE();
	void op_JP_nc_ad();
	void op_OUT_memv_A();
	void op_CALL_nc_ad();
	void op_PUSH_DE();
	void op_SUB_v();
	void op_RST_10h();
	void op_RET_c();
	void op_EXX();
	void op_JP_c_ad();
	void op_IN_A_memv();
	void op_CALL_c_ad();
	void op_EXTENDED_2IX();
	void op_SBC_A_v();
	void op_RST_18h();
	void op_RET_po();
	void op_POP_HL();
	void op_JP_po_ad();
	void op_EX_memSP_HL();
	void op_CALL_po_ad();
	void op_PUSH_HL();
	void op_AND_v();
	void op_RST_20h();
	void op_RET_pe();
	void op_JP_memHL();
	void op_JP_pe_ad();
	void op_EX_DE_HL();
	void op_CALL_pe_ad();
	void op_EXTENDED_3();
	void op_XOR_v();
	void op_RST_28h();
	void op_RET_p();
	void op_POP_AF();
	void op_JP_p_ad();
	void op_DI();
	void op_CALL_p_ad();
	void op_PUSH_AF();
	void op_OR_v();
	void op_RST_30h();
	void op_RET_m();
	void op_LD_SP_HL();
	void op_JP_m_ad();
	void op_EI();
	void op_CALL_m_ad();
	void op_EXTENDED_4IY();
	void op_CP_v();
	void op_RST_38h();
	// extended1
	void op_RLC_B();
	void op_RLC_C();
	void op_RLC_D();
	void op_RLC_E();
	void op_RLC_H();
	void op_RLC_L();
	void op_RLC_memHL();
	void op_RLC_A();
	void op_RRC_B();
	void op_RRC_C();
	void op_RRC_D();
	void op_RRC_E();
	void op_RRC_H();
	void op_RRC_L();
	void op_RRC_memHL();
	void op_RRC_A();
	void op_RL_B();
	void op_RL_C();
	void op_RL_D();
	void op_RL_E();
	void op_RL_H();
	void op_RL_L();
	void op_RL_memHL();
	void op_RL_A();
	void op_RR_B();
	void op_RR_C();
	void op_RR_D();
	void op_RR_E();
	void op_RR_H();
	void op_RR_L();
	void op_RR_memHL();
	void op_RR_A();
	void op_SLA_B();
	void op_SLA_C();
	void op_SLA_D();
	void op_SLA_E();
	void op_SLA_H();
	void op_SLA_L();
	void op_SLA_memHL();
	void op_SLA_A();
	void op_SRA_B();
	void op_SRA_C();
	void op_SRA_D();
	void op_SRA_E();
	void op_SRA_H();
	void op_SRA_L();
	void op_SRA_memHL();
	void op_SRA_A();
	void op_SLL_B();
	void op_SLL_C();
	void op_SLL_D();
	void op_SLL_E();
	void op_SLL_H();
	void op_SLL_L();
	void op_SLL_memHL();
	void op_SLL_A();
	void op_SRL_B();
	void op_SRL_C();
	void op_SRL_D();
	void op_SRL_E();
	void op_SRL_H();
	void op_SRL_L();
	void op_SRL_memHL();
	void op_SRL_A();
	void op_BIT_0_B();
	void op_BIT_0_C();
	void op_BIT_0_D();
	void op_BIT_0_E();
	void op_BIT_0_H();
	void op_BIT_0_L();
	void op_BIT_0_memHL();
	void op_BIT_0_A();
	void op_BIT_1_B();
	void op_BIT_1_C();
	void op_BIT_1_D();
	void op_BIT_1_E();
	void op_BIT_1_H();
	void op_BIT_1_L();
	void op_BIT_1_memHL();
	void op_BIT_1_A();
	void op_BIT_2_B();
	void op_BIT_2_C();
	void op_BIT_2_D();
	void op_BIT_2_E();
	void op_BIT_2_H();
	void op_BIT_2_L();
	void op_BIT_2_memHL();
	void op_BIT_2_A();
	void op_BIT_3_B();
	void op_BIT_3_C();
	void op_BIT_3_D();
	void op_BIT_3_E();
	void op_BIT_3_H();
	void op_BIT_3_L();
	void op_BIT_3_memHL();
	void op_BIT_3_A();
	void op_BIT_4_B();
	void op_BIT_4_C();
	void op_BIT_4_D();
	void op_BIT_4_E();
	void op_BIT_4_H();
	void op_BIT_4_L();
	void op_BIT_4_memHL();
	void op_BIT_4_A();
	void op_BIT_5_B();
	void op_BIT_5_C();
	void op_BIT_5_D();
	void op_BIT_5_E();
	void op_BIT_5_H();
	void op_BIT_5_L();
	void op_BIT_5_memHL();
	void op_BIT_5_A();
	void op_BIT_6_B();
	void op_BIT_6_C();
	void op_BIT_6_D();
	void op_BIT_6_E();
	void op_BIT_6_H();
	void op_BIT_6_L();
	void op_BIT_6_memHL();
	void op_BIT_6_A();
	void op_BIT_7_B();
	void op_BIT_7_C();
	void op_BIT_7_D();
	void op_BIT_7_E();
	void op_BIT_7_H();
	void op_BIT_7_L();
	void op_BIT_7_memHL();
	void op_BIT_7_A();
	void op_RES_0_B();
	void op_RES_0_C();
	void op_RES_0_D();
	void op_RES_0_E();
	void op_RES_0_H();
	void op_RES_0_L();
	void op_RES_0_memHL();
	void op_RES_0_A();
	void op_RES_1_B();
	void op_RES_1_C();
	void op_RES_1_D();
	void op_RES_1_E();
	void op_RES_1_H();
	void op_RES_1_L();
	void op_RES_1_memHL();
	void op_RES_1_A();
	void op_RES_2_B();
	void op_RES_2_C();
	void op_RES_2_D();
	void op_RES_2_E();
	void op_RES_2_H();
	void op_RES_2_L();
	void op_RES_2_memHL();
	void op_RES_2_A();
	void op_RES_3_B();
	void op_RES_3_C();
	void op_RES_3_D();
	void op_RES_3_E();
	void op_RES_3_H();
	void op_RES_3_L();
	void op_RES_3_memHL();
	void op_RES_3_A();
	void op_RES_4_B();
	void op_RES_4_C();
	void op_RES_4_D();
	void op_RES_4_E();
	void op_RES_4_H();
	void op_RES_4_L();
	void op_RES_4_memHL();
	void op_RES_4_A();
	void op_RES_5_B();
	void op_RES_5_C();
	void op_RES_5_D();
	void op_RES_5_E();
	void op_RES_5_H();
	void op_RES_5_L();
	void op_RES_5_memHL();
	void op_RES_5_A();
	void op_RES_6_B();
	void op_RES_6_C();
	void op_RES_6_D();
	void op_RES_6_E();
	void op_RES_6_H();
	void op_RES_6_L();
	void op_RES_6_memHL();
	void op_RES_6_A();
	void op_RES_7_B();
	void op_RES_7_C();
	void op_RES_7_D();
	void op_RES_7_E();
	void op_RES_7_H();
	void op_RES_7_L();
	void op_RES_7_memHL();
	void op_RES_7_A();
	void op_SET_0_B();
	void op_SET_0_C();
	void op_SET_0_D();
	void op_SET_0_E();
	void op_SET_0_H();
	void op_SET_0_L();
	void op_SET_0_memHL();
	void op_SET_0_A();
	void op_SET_1_B();
	void op_SET_1_C();
	void op_SET_1_D();
	void op_SET_1_E();
	void op_SET_1_H();
	void op_SET_1_L();
	void op_SET_1_memHL();
	void op_SET_1_A();
	void op_SET_2_B();
	void op_SET_2_C();
	void op_SET_2_D();
	void op_SET_2_E();
	void op_SET_2_H();
	void op_SET_2_L();
	void op_SET_2_memHL();
	void op_SET_2_A();
	void op_SET_3_B();
	void op_SET_3_C();
	void op_SET_3_D();
	void op_SET_3_E();
	void op_SET_3_H();
	void op_SET_3_L();
	void op_SET_3_memHL();
	void op_SET_3_A();
	void op_SET_4_B();
	void op_SET_4_C();
	void op_SET_4_D();
	void op_SET_4_E();
	void op_SET_4_H();
	void op_SET_4_L();
	void op_SET_4_memHL();
	void op_SET_4_A();
	void op_SET_5_B();
	void op_SET_5_C();
	void op_SET_5_D();
	void op_SET_5_E();
	void op_SET_5_H();
	void op_SET_5_L();
	void op_SET_5_memHL();
	void op_SET_5_A();
	void op_SET_6_B();
	void op_SET_6_C();
	void op_SET_6_D();
	void op_SET_6_E();
	void op_SET_6_H();
	void op_SET_6_L();
	void op_SET_6_memHL();
	void op_SET_6_A();
	void op_SET_7_B();
	void op_SET_7_C();
	void op_SET_7_D();
	void op_SET_7_E();
	void op_SET_7_H();
	void op_SET_7_L();
	void op_SET_7_memHL();
	void op_SET_7_A();
	// extended2 for IX
	void op_ADD_IX_BC();
	void op_ADD_IX_DE();
	void op_LD_IX_ad();
	void op_LD_memAD_IX();
	void op_INC_IX();
	void op_ADD_IX_IX();
	void op_LD_IX_memAD();
	void op_DEC_IX();
	void op_INC_memIXpV();
	void op_DEC_memIXpV();
	void op_LD_memIXpV_v();
	void op_ADD_IX_SP();
	void op_LD_B_memIXpV();
	void op_LD_C_memIXpV();
	void op_LD_D_memIXpV();
	void op_LD_E_memIXpV();
	void op_LD_H_memIXpV();
	void op_LD_L_memIXpV();
	void op_LD_memIXpV_B();
	void op_LD_memIXpV_C();
	void op_LD_memIXpV_D();
	void op_LD_memIXpV_E();
	void op_LD_memIXpV_H();
	void op_LD_memIXpV_L();
	void op_LD_memIXpV_A();
	void op_LD_A_memIXpV();
	void op_ADD_A_memIXpV();
	void op_ADC_A_memIXpV();
	void op_SUB_memIXpV();
	void op_SBC_A_memIXpV();
	void op_AND_memIXpV();
	void op_XOR_memIXpV();
	void op_OR_memIXpV();
	void op_CP_memIXpV();
	void op_EXTENDED_2IX2();
	void op_POP_IX();
	void op_EX_memSP_IX();
	void op_PUSH_IX();
	void op_JP_memIX();
	void op_LD_SP_IX();
	// extended2 for IX - 2
	void op_RLC_memVpIX();
	void op_RRC_memVpIX();
	void op_RL_memVpIX();
	void op_RR_memVpIX();
	void op_SLA_memVpIX();
	void op_SRA_memVpIX();
	void op_SRL_memVpIX();
	void op_BIT_0_memVpIX();
	void op_BIT_1_memVpIX();
	void op_BIT_2_memVpIX();
	void op_BIT_3_memVpIX();
	void op_BIT_4_memVpIX();
	void op_BIT_5_memVpIX();
	void op_BIT_6_memVpIX();
	void op_BIT_7_memVpIX();
	void op_RES_0_memVpIX();
	void op_RES_1_memVpIX();
	void op_RES_2_memVpIX();
	void op_RES_3_memVpIX();
	void op_RES_4_memVpIX();
	void op_RES_5_memVpIX();
	void op_RES_6_memVpIX();
	void op_RES_7_memVpIX();
	void op_SET_0_memVpIX();
	void op_SET_1_memVpIX();
	void op_SET_2_memVpIX();
	void op_SET_3_memVpIX();
	void op_SET_4_memVpIX();
	void op_SET_5_memVpIX();
	void op_SET_6_memVpIX();
	void op_SET_7_memVpIX();
	// extended3 - for debug
	void op_DEBUGBREAK();
	// extended3
	void op_IN_B_memC();
	void op_OUT_memC_B();
	void op_SBC_HL_BC();
	void op_LD_memAD_BC();
	void op_NEG();
	void op_RETN();
	void op_IM_0();
	void op_LD_i_A();
	void op_IN_C_memC();
	void op_OUT_memC_C();
	void op_ADC_HL_BC();
	void op_LD_BC_memAD();
	void op_RETI();
	void op_LD_R_A();
	void op_IN_D_memC();
	void op_OUT_memC_D();
	void op_SBC_HL_DE();
	void op_LD_memAD_DE();
	void op_IM_1();
	void op_LD_A_i();
	void op_IN_E_memC();
	void op_OUT_memC_E();
	void op_ADC_HL_DE();
	void op_LD_DE_memAD();
	void op_IM_2();
	void op_LD_A_R();
	void op_IN_H_memC();
	void op_OUT_memC_H();
	void op_SBC_HL_HL();
	void op_RRD();
	void op_IN_L_memC();
	void op_OUT_memC_L();
	void op_ADC_HL_HL();
	void op_RLD();
//	void op_IN_memC();
	void op_SBC_HL_SP();
	void op_LD_memAD_SP();
	void op_IN_A_memC();
	void op_OUT_memC_A();
	void op_ADC_HL_SP();
	void op_LD_SP_memAD();
	void op_LDI();
	void op_CPI();
	void op_INI();
	void op_OUTI();
	void op_LDD();
	void op_CPD();
	void op_IND();
	void op_OUTD();
	void op_LDIR();
	void op_CPIR();
	void op_INIR();
	void op_OTIR();
	void op_LDDR();
	void op_CPDR();
	void op_INDR();
	void op_OUTR();
	// extended4 for IY
	void op_ADD_IY_BC();
	void op_ADD_IY_DE();
	void op_LD_IY_ad();
	void op_LD_memAD_IY();
	void op_INC_IY();
	void op_ADD_IY_IY();
	void op_LD_IY_memAD();
	void op_DEC_IY();
	void op_INC_memIYpV();
	void op_DEC_memIYpV();
	void op_LD_memIYpV_v();
	void op_ADD_IY_SP();
	void op_LD_B_IYH();				// undoc.Z80	
	void op_LD_B_IYL();				// undoc.Z80	
	void op_LD_B_memIYpV();
	void op_LD_C_IYH();				// undoc.Z80
	void op_LD_C_IYL();				// undoc.Z80
	void op_LD_C_memIYpV();
	void op_LD_D_memIYpV();
	void op_LD_E_memIYpV();
	void op_LD_IYH_E();				// undoc.Z80
	void op_LD_H_memIYpV();
	void op_LD_IYL_IYH();			// undoc.Z80
	void op_LD_IYL_IYL();			// undoc.Z80
	void op_LD_L_memIYpV();
	void op_LD_IYL_A();				// undoc.Z80
	void op_LD_memIYpV_B();
	void op_LD_memIYpV_C();
	void op_LD_memIYpV_D();
	void op_LD_memIYpV_E();
	void op_LD_memIYpV_H();
	void op_LD_memIYpV_L();
	void op_LD_memIYpV_A();
	void op_LD_A_IYH();				// undoc.Z80
	void op_LD_A_IYL();				// undoc.Z80
	void op_LD_A_memIYpV();
	void op_ADD_A_memIYpV();
	void op_ADC_A_memIYpV();
	void op_SUB_memIYpV();
	void op_SBC_A_memIYpV();
	void op_AND_memIYpV();
	void op_XOR_memIYpV();
	void op_OR_memIYpV();
	void op_CP_memIYpV();
	void op_EXTENDED_4IY2();
	void op_POP_IY();
	void op_EX_memSP_IY();
	void op_PUSH_IY();
	void op_JP_memIY();
	void op_LD_SP_IY();
	// extended4 for IY - 2
	void op_RLC_memVpIY();
	void op_RRC_memVpIY();
	void op_RL_memVpIY();
	void op_RR_memVpIY();
	void op_SLA_memVpIY();
	void op_SRA_memVpIY();
	void op_SRL_memVpIY();
	void op_BIT_0_memVpIY();
	void op_BIT_1_memVpIY();
	void op_BIT_2_memVpIY();
	void op_BIT_3_memVpIY();
	void op_BIT_4_memVpIY();
	void op_BIT_5_memVpIY();
	void op_BIT_6_memVpIY();
	void op_BIT_7_memVpIY();
	void op_RES_0_memVpIY();
	void op_RES_1_memVpIY();
	void op_RES_2_memVpIY();
	void op_RES_3_memVpIY();
	void op_RES_4_memVpIY();
	void op_RES_5_memVpIY();
	void op_RES_6_memVpIY();
	void op_RES_7_memVpIY();
	void op_SET_0_memVpIY();
	void op_SET_1_memVpIY();
	void op_SET_2_memVpIY();
	void op_SET_3_memVpIY();
	void op_SET_4_memVpIY();
	void op_SET_5_memVpIY();
	void op_SET_6_memVpIY();
	void op_SET_7_memVpIY();
};


